/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AdminUpdateManyWithoutUsersInput } from "./AdminUpdateManyWithoutUsersInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsInt,
  Max,
} from "class-validator";
import { Type } from "class-transformer";
import { BlueprintUpdateManyWithoutUsersInput } from "./BlueprintUpdateManyWithoutUsersInput";
import { LeaderboardUpdateManyWithoutUsersInput } from "./LeaderboardUpdateManyWithoutUsersInput";
import { NotificationUpdateManyWithoutUsersInput } from "./NotificationUpdateManyWithoutUsersInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { StakeUpdateManyWithoutUsersInput } from "./StakeUpdateManyWithoutUsersInput";
import { TransactionUpdateManyWithoutUsersInput } from "./TransactionUpdateManyWithoutUsersInput";

@InputType()
class UserUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AdminUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => AdminUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => AdminUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  admins?: AdminUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => BlueprintUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => BlueprintUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => BlueprintUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  blueprints?: BlueprintUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(256)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => LeaderboardUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => LeaderboardUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => LeaderboardUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  leaderboards?: LeaderboardUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => NotificationUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => NotificationUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => NotificationUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  notifications?: NotificationUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  password?: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Max(99999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  rank?: number | null;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  roles?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => StakeUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => StakeUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => StakeUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  stakes?: StakeUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: () => TransactionUpdateManyWithoutUsersInput,
  })
  @ValidateNested()
  @Type(() => TransactionUpdateManyWithoutUsersInput)
  @IsOptional()
  @Field(() => TransactionUpdateManyWithoutUsersInput, {
    nullable: true,
  })
  transactions?: TransactionUpdateManyWithoutUsersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  username?: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  walletAddress?: string | null;
}

export { UserUpdateInput as UserUpdateInput };
